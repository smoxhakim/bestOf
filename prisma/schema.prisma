generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("STORAGE_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogPosts BlogPost[]
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  imageUrl    String
  specs       Json?
  features    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  icon        String?
  stock       Int     @default(10)
  rating      Float   @default(4.5)
  orders      Order[]
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id          String   @id @default(cuid())
  name        String
  companyName String?
  city        String
  phone       String
  email       String
  status      OrderStatus @default(PENDING)
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  quantity    Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

model TrustedCompany {
  id        String   @id @default(cuid())
  name      String
  logoUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String   @db.Text
  excerpt     String?
  coverImage  String?
  published   Boolean  @default(false)
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
